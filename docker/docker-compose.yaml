services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    restart: unless-stopped
    container_name: app
    ports:
      - 8005:8005
    networks:
      - example-network
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/api_logs
      - TESTING=False
      - WHYLABS_API_KEY=ZZZhY9vhvy.l764MW6fPuUBIsQ5Nz22KDnb9s7JsJoRPUirpAnljqE7yGTBt5NnW
      - WHYLABS_ORG_ID=org-DCZmkU
      - WHYLABS_API_DATASET_ID=model-3
    #command: uvicorn app.app:app --host 0.0.0.0 --port 8005

  db:
    image: postgres:13
    restart: unless-stopped
    container_name: db
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=api_logs
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh
      - ./data/init_tables.sql:/docker-entrypoint-initdb.d/init_tables.sql
      - ./data/insert_test_data.sql:/docker-entrypoint-initdb.d/insert_test_data.sql
    networks:
      - example-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d api_logs"]
      interval: 10s
      timeout: 5s
      retries: 5

  batch:
    build:
      context: ..
      dockerfile: docker/Dockerfile.batch
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../data/batch_input:/code/data/batch_input
      - ../data/batch_results:/code/data/batch_results
    env_file:
    - .env
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/api_logs
      - EXPANSION_SERVICE=batch:8097
      - TESTING=False
      - PYTHONPATH=/code
      - WHYLABS_API_KEY=ZZZhY9vhvy.l764MW6fPuUBIsQ5Nz22KDnb9s7JsJoRPUirpAnljqE7yGTBt5NnW
      - WHYLABS_ORG_ID=org-DCZmkU
      - WHYLABS_DATASET_ID=model-4
    networks:
      - example-network
    command: >
      /bin/bash -c "
      python /code/src/models/batch/create_tables.py &&
      python /code/src/models/batch/beam_processing.py"

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - example-network
    depends_on:
      - app

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    user: "472"
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - grafana_data:/var/lib/grafana
    env_file:
      - ./config.monitoring
    networks:
      - example-network

networks:
  example-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24

volumes:
  postgres_data:
  grafana_data: